{"version":3,"file":"component---src-pages-index-tsx-b77f92cbd5e449b188e6.js","mappings":"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","sources":["webpack://nikz-dev-blog/./src/components/bio.tsx","webpack://nikz-dev-blog/./src/pages/index.tsx"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { StaticImage } from 'gatsby-plugin-image';\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query Bio {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `);\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author;\n  const social = data.site.siteMetadata?.social;\n\n  return (\n    <div className=\"flex flex-row mb-4\">\n      <StaticImage\n        className=\"bio-avatar rounded-full drop-shadow-md\"\n        layout=\"fixed\"\n        src=\"../images/profile.jpg\"\n        width={50}\n        height={50}\n        alt=\"Profile picture\"\n      />\n      {author?.name && (\n        <p className=\"m-0 ml-4\">\n          Written by <strong>{author.name}</strong> {author?.summary || null}\n          <br />\n          <a\n            href={`https://twitter.com/${social?.twitter || ``}`}\n            title=\"Twitter\"\n            target=\"_blank\"\n            className=\"text-sky-500 hover:text-sky-400\"\n          >\n            Follow on Twitter\n          </a>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default Bio;\n","import * as React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport { GatsbyImage } from 'gatsby-plugin-image';\nimport Bio from '../components/bio';\nimport Layout from '../components/layout';\nimport Seo from '../components/seo';\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`;\n  const posts = data.allMarkdownRemark.nodes;\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the directory you specified for the\n          \"gatsby-source-filesystem\" plugin in gatsby-config.js).\n        </p>\n      </Layout>\n    );\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <h1 className=\"text-3xl lg:text-5xl md:text-5xl mb-4 font-bold tracking-tighter\">\n        <span className=\"bg-gradient-horizon animated-text-bg\">nik</span>\n        <span className=\"text-gray-200 dark:text-neutral-800 font-thin\">olay</span>\n        <span className=\"bg-gradient-horizon animated-text-bg\">z</span>\n        <span className=\"text-gray-200 dark:text-neutral-800 font-thin\">hekov</span>\n        <span className=\"bg-gradient-oceanic animated-text-bg pr-1\">.dev</span>\n      </h1>\n      <p className=\"mb-8\">Software Engineer based in London</p>\n      <div className=\"mb-4 flex flex-row\">\n        <h2 className=\"grow text-xl font-bold\">Latest Blog Posts</h2>\n        <Link to=\"/blog\">View all â†’</Link>\n      </div>\n\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4 place-content-stretch\">\n        {posts.slice(0, 2).map((post) => {\n          const title = post.frontmatter.title || post.fields.slug;\n          const Image = post.frontmatter.featuredImage\n            ? post.frontmatter.featuredImage.childImageSharp.gatsbyImageData\n            : '';\n\n          return (\n            <Link key={post.fields.slug} to={post.fields.slug} itemProp=\"url\">\n              <div className=\"rounded-lg bg-white dark:bg-neutral-900 shadow-md hover:shadow-lg dark:shadow-neutral-700/50 hover:dark:shadow-orange-500/50 h-full\">\n                {Image ? (\n                  <GatsbyImage\n                    image={Image}\n                    alt={post.frontmatter.title + ' - Featured image'}\n                    className=\"rounded-t-lg w-full\"\n                  />\n                ) : (\n                  ''\n                )}\n                <div className=\"post-list-item p-4\" itemScope itemType=\"http://schema.org/Article\">\n                  <h2 className=\"m-0 mb-1 text-xl font-bold\">{title}</h2>\n\n                  <p\n                    className=\"text-sm text-slate-600 dark:text-slate-300\"\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                  />\n\n                  <small>\n                    {post.frontmatter.date} &bull; {post.fields.timeToRead.text}\n                  </small>\n                </div>\n              </div>\n            </Link>\n          );\n        })}\n      </div>\n    </Layout>\n  );\n};\n\nexport default BlogIndex;\n\nexport const Head = () => {\n  return <Seo title=\"NikZ.dev Blog\" />;\n};\n\nexport const pageQuery = graphql`\n  query BlogIndexPage {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(filter: { frontmatter: { draft: { ne: true } } }, sort: { frontmatter: { date: DESC } }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n          timeToRead {\n            text\n          }\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          featuredImage {\n            childImageSharp {\n              gatsbyImageData(width: 360, placeholder: BLURRED, formats: [AUTO, WEBP, AVIF], quality: 90)\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["data","useStaticQuery","author","site","siteMetadata","_data$site$siteMetada","social","_data$site$siteMetada2","React","className","StaticImage","layout","src","width","height","alt","name","summary","href","twitter","title","target","_ref","location","siteTitle","posts","allMarkdownRemark","nodes","length","Layout","Bio","Link","to","slice","map","post","frontmatter","fields","slug","Image","featuredImage","childImageSharp","gatsbyImageData","key","itemProp","GatsbyImage","image","itemScope","itemType","dangerouslySetInnerHTML","__html","description","excerpt","date","timeToRead","text","Head","Seo"],"sourceRoot":""}